.yaml 文件和 .properties 文件的区别
  .yaml 文件以 : 标志变量级别，并进行相应的缩进，文件编排更清晰（冒号后有空格
  .properties 文件用 . 标志变量级别

User 中 @GeneratedValue 注解的 strategy 属性提供四种值：
  -AUTO: 主键由程序控制，是默认选项，不设置即此项；
  -IDENTITY: 主键由数据库自动生成，即采用数据库 ID 自增长的方式，Oracle 不支持这种方式；
  -SEQUENCE: 通过数据库的序列产生主键，通过 @SequenceGenerator 注解指定序列名，mysql 不支持这种方式；
  -TABLE: 通过特定的数据库表产生主键，使用该策略可是使应用更易于数据库移植。

JPA 的常用方法
  1.首先需要定义一个接口，并继承自 JpaRepository，并在该接口类上使用 @Repository 注解，告知 SpringBoot 这是一个 Repository 类；
  2.在外部调用使用 @Resource 将该接口注入；
  3.可以使用该 JPA 接口中很多自定义的方法，比如，代码提示框中“加粗”方法为 JPA 中自己定义的方法；
  4.如果方法不够业务使用，则可以在 JPA 中自己写方法，强大的 JPA 语法几乎不需要写 sql 语句，当然业务需要也可以自己定义；
  5.如果要自己写 sql，则在 JPA 上自已定义方法，但是不需要自己实现，并使用 @Query 注解该方法，在 @Query 内使用 value 写 sql 或 hql，如果写的是 sql 则需要使用 nativeQuery = true;
  6.自己写的 jpa 方法，并使用了 @Query 注解，但是里面执行的是 update 或者 delete 的 sql 语句的话需要使用 @ Modifying 注解。